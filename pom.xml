<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.openlcb</groupId>
    <artifactId>standards-generator</artifactId>
    <version>0.1</version>
    <name>OpenLCB Standards Generator</name>
    <description>A generator for OpenLCB and NMRA LCC documentation.</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- empty matchs all Asciidoc files by default -->
        <openlcb.doc></openlcb.doc>
        <openlcb.fo.customization>src/resources/docbook-fo.xsl</openlcb.fo.customization>
    </properties>

    <profiles>
        <profile>
            <id>draft</id>
            <!-- draft openlcb documents -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <openlcb.fo.customization>src/resources/docbook-fo-draft.xsl</openlcb.fo.customization>
            </properties>
        </profile>
        <profile>
            <id>openlcb</id>
            <properties>
                <openlcb.fo.customization>src/resources/docbook-fo-openlcb.xsl</openlcb.fo.customization>
            </properties>
        </profile>
        <profile>
            <id>nmralcc</id>
            <properties>
                <openlcb.fo.customization>src/resources/docbook-fo-nmra-lcb.xsl</openlcb.fo.customization>
            </properties>
        </profile>
    </profiles>

    <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>2.1.0</version>
                <dependencies>
                    <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>9.2.19.0</version>
                    </dependency>
                    <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>2.5.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>2.1.2</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>src</sourceDirectory>
                    <sourceDocumentName>${openlcb.doc}</sourceDocumentName>
                    <!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
                    <!--
                    <baseDir>${project.basedir}</baseDir>
                    -->
                    <attributes>
                        <endpoint-url>http://example.org</endpoint-url>
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                    </attributes>
                    <requires>
                        <require>asciidoctor-diagram</require>
                    </requires>
                </configuration>
                <executions>
                    <execution>
                        <id>asciidoc-to-docbook</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>docbook</backend>
                            <attributes>
                                <imagesdir>images</imagesdir>
                                <attribute-missing>warn</attribute-missing>
                                <docinfo>shared</docinfo>
                            </attributes>
                            <logHandler>
                                <failIf>
                                    <severity>WARN</severity>
                                </failIf>
                            </logHandler>                        
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
            NOTE: Use the maven-resources-plugin if there are assets outside the AsciiDoc source folder
                  that need to be copied to the generated-docs. The Maven plugin automatically copies
                  non-AsciiDoc files in the AsciiDoc source folder to generated-docs.
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-asciidoc-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/docs/resources</directory>
                                    <includes>
                                        <include>**/*.jpg</include>
                                        <include>**/*.png</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>target/generated-docs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
            <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <version>2.0.17</version>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.docbook</groupId>
                        <artifactId>docbook-xml</artifactId>
                        <version>5.0-all</version>
                        <classifier>resources</classifier>
                        <type>zip</type>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>net.sf.xslthl</groupId>
                        <artifactId>xslthl</artifactId>
                        <version>2.0.1</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>net.sf.offo</groupId>
                        <artifactId>fop-hyph</artifactId>
                        <version>1.2</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>generate-pdf</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generate-pdf</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceDirectory>${project.build.directory}/generated-docs</sourceDirectory>
                    <targetDirectory>${project.build.directory}/generated-docs</targetDirectory>
                    <foCustomization>${openlcb.fo.customization}</foCustomization>
                    <fop1Extensions>1</fop1Extensions>
                    <xincludeSupported>true</xincludeSupported>
                    <!-- NOTE imgSrcPath is handled by AsciiDoc settings -->
                    <imgSrcPath></imgSrcPath>
                    <!-- FIXME highlightSource not working! -->
                    <highlightSource>1</highlightSource>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.8</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>